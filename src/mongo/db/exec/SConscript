# -*- mode: python -*-

Import("env")

env = env.Clone()

# WorkingSet target and associated test
env.Library(
    target = "working_set",
    source = [
        "working_set.cpp",
        "working_set_computed_data.cpp"
    ],
    LIBDEPS = [
        "$BUILD_DIR/monger/base",
        "$BUILD_DIR/monger/db/bson/dotted_path_support",
        "$BUILD_DIR/monger/db/service_context",
    ],
)

env.Library(
    target = "scoped_timer",
    source = [
        "scoped_timer.cpp",
    ],
    LIBDEPS = [
        '$BUILD_DIR/monger/util/net/network',
    ],
)

env.Library(
    target='stagedebug_cmd',
    source=[
        'stagedebug_cmd.cpp'
    ],
    LIBDEPS=[
        "$BUILD_DIR/monger/db/index/index_access_methods",
        "$BUILD_DIR/monger/db/query_exec",
    ],
    LIBDEPS_PRIVATE=[
        '$BUILD_DIR/monger/db/commands/test_commands_enabled',
    ],
)

env.CppUnitTest(
    target='db_exec_test',
    source=[
        "projection_exec_agg_test.cpp",
        "projection_exec_test.cpp",
        "queued_data_stage_test.cpp",
        "sort_test.cpp",
        "working_set_test.cpp",
    ],
    LIBDEPS=[
        "$BUILD_DIR/monger/base",
        "$BUILD_DIR/monger/db/auth/authmocks",
        "$BUILD_DIR/monger/db/projection_exec_agg",
        "$BUILD_DIR/monger/db/query/collation/collator_factory_mock",
        "$BUILD_DIR/monger/db/query/collation/collator_interface_mock",
        "$BUILD_DIR/monger/db/query/query_test_service_context",
        "$BUILD_DIR/monger/db/query_exec",
        "$BUILD_DIR/monger/db/service_context_d",
        "$BUILD_DIR/monger/db/service_context_d_test_fixture",
        "$BUILD_DIR/monger/dbtests/mocklib",
        "$BUILD_DIR/monger/util/clock_source_mock",
        "working_set",
    ],
)
